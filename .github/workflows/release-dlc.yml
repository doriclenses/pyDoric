name: Release DeepLabCut

on:
  push:
    tags: ['deeplabcut-v*']
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: dlc-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: [self-hosted, Windows, X64, GPU]
    timeout-minutes: 180

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version from tag (cmd)
        shell: cmd
        run: |
          set VERSION=%GITHUB_REF_NAME:deeplabcut-v=%
          echo VERSION=%VERSION%>> %GITHUB_ENV%

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: true

      - name: Create env (cmd)
        shell: cmd
        run: conda create -n dlc_pyinstaller python=3.10 -y

      - name: Install deps from requirements + GPU Torch (cmd)
        shell: cmd
        run: |
          conda run -n dlc_pyinstaller python -m pip install --upgrade pip
          conda run -n dlc_pyinstaller pip install -r DeepLabCut/requirements.txt
          conda install -n dlc_pyinstaller -y -c conda-forge pyinstaller
          conda run -n dlc_pyinstaller pip install --upgrade --index-url https://download.pytorch.org/whl/cu124 torch torchvision
          conda run -n dlc_pyinstaller python - <<PY
          import torch
          print("Torch:", torch.__version__)
          print("CUDA build:", getattr(torch.version, "cuda", None))
          print("CUDA available at runtime:", torch.cuda.is_available())
          PY

      - name: Build DeepLabCut exe (cmd)
        shell: cmd
        working-directory: Deploy
        run: |
          conda run -n dlc_pyinstaller pyinstaller --clean --noconfirm pack_deeplabcut_run.spec
          rem zip using built-in tar (no PowerShell needed)
          tar -a -c -f DeepLabCut-%VERSION%.zip -C dist .

      - name: Create GitHub Release (attach zip)
        uses: softprops/action-gh-release@v2
        with:
          name: DeepLabCut ${{ env.VERSION }}
          body: "Automated DeepLabCut release for tag ${{ github.ref_name }}."
          files: Deploy/DeepLabCut-${{ env.VERSION }}.zip
