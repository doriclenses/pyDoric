name: Release DeepLabCut

on:
  push:
    tags: ['deeplabcut-v*']
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: [self-hosted, Windows, X64, GPU]
    timeout-minutes: 180

    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        shell: cmd
        run: |
          set VERSION=%GITHUB_REF_NAME:deeplabcut-v=%
          echo VERSION=%VERSION%>> %GITHUB_ENV%

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Create venv
        shell: cmd
        run: python -m venv venv

      - name: Install deps
        shell: cmd
        run: |
          venv\Scripts\python -m pip install --upgrade pip
          venv\Scripts\pip install -r DeepLabCut/requirements.txt
          venv\Scripts\pip install pyinstaller
          venv\Scripts\pip install --upgrade --index-url https://download.pytorch.org/whl/cu124 torch torchvision
          venv\Scripts\python - <<PY
          import torch
          print("Torch:", torch.__version__)
          print("CUDA build:", getattr(torch.version, "cuda", None))
          print("CUDA available at runtime:", torch.cuda.is_available())
          PY

      - name: Build exe
        shell: cmd
        working-directory: Deploy
        run: |
          ..\venv\Scripts\pyinstaller --clean --noconfirm pack_deeplabcut_run.spec
          tar -a -c -f DeepLabCut-%VERSION%.zip -C dist .

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          name: DeepLabCut ${{ env.VERSION }}
          body: "Automated DeepLabCut release for tag ${{ github.ref_name }}."
          files: Deploy/DeepLabCut-${{ env.VERSION }}.zip
